# type TripEvent {
# 	id: ID!
# 	name: String!
# 	category: TripEventCategory
# 	info_to_travellers: String
#   website_url: AWSURL
#   image_url: AWSURL
#   status: TripEventStatus!
# }

# enum TripEventCategory {
#   SPORT
#   MUSIC
#   WELLNESS
#   VACATION
#   OTHER
# }

# enum TripEventStatus {
#   PUBLISHED
# }

# input UpdateTripEventInput {
#   id: ID!
#   name: String
#   category: TripEventCategory
#   info_to_travellers: String
#   website_url: AWSURL
#   image_url: AWSURL
#   status: TripEventStatus
# }

# type Mutation {
#   updateTripEvent(input: UpdateTripEventInput!): TripEvent
# }

# -------

type Note {
  id: ID!
  content: String!
}

input NoteInput {
  id: ID!
  content: String!
}

input UpdateNoteInput {
  id: ID!
  content: String
}

type Query {
  listNotes: [Note]
  getNoteById(noteId: String!): Note
}

type Mutation {
  createNote(note: NoteInput!): Note
  deleteNote(noteId: String!): String
  updateNote(note: UpdateNoteInput!): Note
}